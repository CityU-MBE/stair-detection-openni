cmake_minimum_required (VERSION 2.6) 
project (fhg_pcl) 

set(CMAKE_BUILD_TYPE RelWithDebInfo)
set(CMAKE_CXX_FLAGS "-W -Wall -Wno-unused-parameter -frounding-math std=c++11")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib) 
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin) 
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib) 
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

FIND_PACKAGE( OpenCV 2.4.8 EXACT REQUIRED )

find_package(PCL 1.6 REQUIRED COMPONENTS common io search filters kdtree registration visualization surface segmentation)
#include_directories(${PCL_INCLUDE_DIRS} /usr/local/MATLAB/R2012a/extern/include)
include_directories(${PCL_INCLUDE_DIRS} )
#link_directories(${PCL_LIBRARY_DIRS} /usr/local/MATLAB/R2012a/bin/glnxa64)
#link_libraries(osg osgText osgViewer osgGA CGAL eng mat mx boost_program_options boost_thread boost_filesystem boost_system)
add_definitions(${PCL_DEFINITIONS})

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
#PCL_ADD_INCLUDES(${SUBSYS_NAME} ${SUBSYS_NAME} ${incs})
#PCL_ADD_INCLUDES(${SUBSYS_NAME} ${SUBSYS_NAME}/impl ${impl_incs})

#add_library(fhg_bindings src/fhg_bindings.cpp)
#target_link_libraries(fhg_bindings ${PCL_LIBRARIES} )
#add_library(fhg_pcl src/fhg_pcl.cpp)
#target_link_libraries(fhg_pcl ${PCL_LIBRARIES} )

link_directories(${PROJECT_SOURCE_DIR}/lib)
link_directories(/usr/lib/x86_64-linux-gnu)

set(FHG_PCL_BINDINGS fhg_binding_common fhg_binding_filters fhg_binding_sac fhg_binding_kdtree fhg_binding_search fhg_binding_surface fhg_binding_features fhg_binding_segmentation fhg_binding_registration fhg_binding_visualization)

#Tailei
#add_executable(steps_test src/pcl/apps/stairdetector_tailei.cpp)
#target_link_libraries(steps_test boost_thread boost_filesystem boost_system  ${OpenCV_LIBS} ${PCL_LIBRARIES} fhg_apps ${FHG_PCL_BINDINGS} yaml-cpp)
#end tailei

include_directories(../wheelChair_qt)
add_executable(testfunc  ../wheelChair_qt/chairdetector.cpp ../wheelChair_qt/test.cpp )
target_link_libraries(testfunc boost_thread boost_filesystem boost_system  ${OpenCV_LIBS} ${PCL_LIBRARIES} fhg_apps ${FHG_PCL_BINDINGS} yaml-cpp)



